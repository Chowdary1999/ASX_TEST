// netlify/functions/market.js
const https=require('https');
function fetchJSON(url,timeoutMs=6000){return new Promise((resolve,reject)=>{const req=https.get(url,{headers:{'User-Agent':'Mozilla/5.0'}},res=>{let data='';res.on('data',c=>data+=c);res.on('end',()=>{try{resolve(JSON.parse(data))}catch(e){reject(new Error('Bad JSON from '+url+': '+e.message))}})});req.on('error',reject);req.setTimeout(timeoutMs,()=>{req.destroy(new Error('Timeout'))})})}
function json(body,status=200){return{statusCode:status,headers:{'Content-Type':'application/json','Cache-Control':'no-store, no-cache, must-revalidate, max-age=0','Pragma':'no-cache','Expires':'0','Access-Control-Allow-Origin':'*'},body:JSON.stringify(body)}}
async function yahooChart(sym,range='6mo',interval='1d',timeoutMs=6000){const url=`https://query1.finance.yahoo.com/v8/finance/chart/${encodeURIComponent(sym)}?interval=${interval}&range=${range}`;return fetchJSON(url,timeoutMs).then(y=>y?.chart?.result?.[0]||null)}
function pctChange(closes,look){if(!closes||closes.length<=look)return null;const a=closes[closes.length-1],b=closes[closes.length-1-look];if(!isFinite(a)||!isFinite(b)||b===0)return null;return (a-b)/b*100}
async function scoreWithYahoo(symbolAX,mcap,timeoutPer=2500){const r=await yahooChart(symbolAX,'6mo','1d',timeoutPer);const closes=r?.indicators?.quote?.[0]?.close||[];if(closes.length<40)return null;const last=closes[closes.length-1];if(!isFinite(last)||last<=0.05)return null;const d1=pctChange(closes,1)??0,d5=pctChange(closes,5)??0,d20=pctChange(closes,20)??0;const score=0.6*d1+0.3*d5+0.1*d20-(mcap>5e9?1.25:(mcap>1e9?0.5:0));return{entry:last,score}}
async function pick3Fast(mode='fast'){const deadline=Date.now()+(mode==='full'?9000:6000);const te=await fetchJSON('https://api.tradingeconomics.com/markets/stocks/country/australia?c=guest:guest&f=json',6000);const rows=(te||[]).map(r=>({symbol:(r.Symbol||r.symbol||'').toUpperCase(),name:r.Name||r.name||'',mcap:r.MarketCap??r.market_cap??0,d:{day:r.DailyPercentualChange??r.daily_percentual_change??0,week:r.WeeklyPercentualChange??r.weekly_percentual_change??0,month:r.MonthlyPercentualChange??r.monthly_percentual_change??0},last:r.Last??r.last??null})).filter(r=>r.symbol&&r.symbol.endsWith('.AX'));const limit=mode==='full'?50:20;const pool=rows.sort((a,b)=>(b.mcap||0)-(a.mcap||0)).slice(0,limit);const out=[];let i=0;async function worker(){while(i<pool.length&&Date.now()<deadline&&out.length<12){const row=pool[i++];try{const r=await scoreWithYahoo(row.symbol,row.mcap,2000);if(r){out.push({symbol:row.symbol,name:row.name,entry:r.entry,score:r.score})}}catch{}}}await Promise.all([worker(),worker(),worker(),worker()]);if(out.length<3){const fallback=pool.map(row=>{const entry=Number(row.last)||0;const score=(row.d.day||0)+0.5*(row.d.week||0)+0.25*(row.d.month||0)-(row.mcap>5e9?1.25:(row.mcap>1e9?0.5:0));return{symbol:row.symbol,name:row.name,entry,score}}).filter(r=>r.entry>0.05);fallback.sort((a,b)=>(b.score||-1e9)-(a.score||-1e9));const picks=fallback.slice(0,3).map((t,i)=>({...t,rank:i+1}));return{picks,asOf:new Date().toISOString(),note:'fallback: TE deltas'}}out.sort((a,b)=>(b.score||-1e9)-(a.score||-1e9));const picks=out.slice(0,3).map((t,i)=>({...t,rank:i+1}));return{picks,asOf:new Date().toISOString(),note:'yahoo momentum'}}
exports.handler=async(event)=>{try{const q=event.queryStringParameters||{};if(q.fn!=='pick3')return json({error:'Unsupported fn. Use fn=pick3'},400);const mode=q.mode||'fast';const result=await pick3Fast(mode);return json(result)}catch(e){return json({error:e.message},500)}}
